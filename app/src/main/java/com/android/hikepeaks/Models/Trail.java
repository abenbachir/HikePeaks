package com.android.hikepeaks.Models;

import android.location.Location;

import com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBAttribute;
import com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBAutoGeneratedKey;
import com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBHashKey;
import com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBIgnore;
import com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBMarshalling;
import com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBNativeBoolean;
import com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBRangeKey;
import com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBTable;
import com.android.hikepeaks.Synchronizer.SyncObjectInterface;

import org.simpleframework.xml.Element;
import org.simpleframework.xml.ElementList;
import org.simpleframework.xml.Root;

import java.util.ArrayList;


@DynamoDBTable(tableName = "Trails")
@Root
public class Trail implements SyncObjectInterface {
    @Element(required = false)
    private String id;
    @Element(required = false)
    private String accountId;
    @Element(required = false)
    private String title;
    @Element
    private long createdAt = 0;
    @Element
    private double distance = 0; // meters
    @Element
    private double steps = 0;
    @Element
    private double averageSpeed = 0; // meter/seconds
    @Element
    private int elapsedTimeInSeconds = 0;
    @Element
    private boolean isPathCompleted = false;
    @ElementList(name = "path", required = false)
    private ArrayList<TrailPoint> path = new ArrayList<>();
    @ElementList(name = "captures", required = false)
    private ArrayList<TrailCapture> captures = new ArrayList<>();
    @Element
    private boolean isSynchronized = true;

    private Account account = null;

    public Trail(){
        createdAt = System.currentTimeMillis();
    }

    @DynamoDBHashKey(attributeName = "Id")
    @DynamoDBAutoGeneratedKey
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @DynamoDBRangeKey(attributeName = "AccountId")
    public String getAccountId() {
        return accountId;
    }

    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

    @DynamoDBRangeKey(attributeName = "Title")
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    @DynamoDBRangeKey(attributeName = "CreatedAt")
    public long getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(long createdAt) {
        this.createdAt = createdAt;
    }

    @DynamoDBAttribute(attributeName = "IsPathCompleted")
    @DynamoDBNativeBoolean
    public boolean isPathCompleted() {
        return isPathCompleted;
    }

    public void setPathCompleted(boolean completed) {
        this.isPathCompleted = completed;
    }

    @DynamoDBAttribute(attributeName = "ElapsedTimeInSeconds")
    public int getElapsedTimeInSeconds() {
        return elapsedTimeInSeconds;
    }

    public void setElapsedTimeInSeconds(int elapsedTimeSeconds) {
        this.elapsedTimeInSeconds = elapsedTimeSeconds;
    }

    @DynamoDBAttribute(attributeName = "Distance")
    public double getDistance() {
        return distance;
    }

    public void setDistance(double distance) {
        this.distance = distance;
    }

    @DynamoDBAttribute(attributeName = "Steps")
    public double getSteps() {
        return steps;
    }

    public void setSteps(double steps) {
        this.steps = steps;
    }

    @DynamoDBAttribute(attributeName = "AverageSpeed")
    public double getAverageSpeed() {
        return averageSpeed;
    }

    public void setAverageSpeed(double averageSpeed) {
        this.averageSpeed = averageSpeed;
    }

    @DynamoDBAttribute(attributeName = "Captures")
    @DynamoDBMarshalling(marshallerClass = TrailCaptureCollectionMarshaller.class)
    public ArrayList<TrailCapture> getCaptures() {
        return captures;
    }

    public void setCaptures(ArrayList<TrailCapture> captures) {
        this.captures = captures;
    }

    @DynamoDBIgnore
    public void addCapture(TrailCapture capture) {
        this.captures.add(capture);
    }

    @DynamoDBAttribute(attributeName = "Path")
    @DynamoDBMarshalling(marshallerClass = TrailPointCollectionMarshaller.class)
    public ArrayList<TrailPoint> getPath() {
        return path;
    }

    public void setPath(ArrayList<TrailPoint> path) {
        this.path = path;
    }

    public void addPoint(TrailPoint point) {
        this.path.add(point);
    }

    @DynamoDBIgnore
    public void calculatePathDistance() {
        if (path.size() <= 1)
            return;
        double calculs = 0;
        float[] results = new float[1];
        for (int i = 1; i < path.size(); i++) {
            TrailPoint start = path.get(i - 1);
            TrailPoint end = path.get(i);
            results[0] = 0;
            Location.distanceBetween(start.getLatitude(), start.getLongitude(),
                    end.getLatitude(), end.getLongitude(), results);
            calculs += results[0];
        }
        distance = calculs;
    }

    @DynamoDBIgnore
    public void calculateAverageSpeed() {
        averageSpeed = distance / elapsedTimeInSeconds;
    }

    @DynamoDBIgnore
    public TrailPoint getStartPoint() {
        return path.size() > 0 ? path.get(0) : null;
    }

    @DynamoDBIgnore
    public TrailPoint getEndPoint() {
        return path.size() > 0 ? path.get(path.size() - 1) : null;
    }

    @DynamoDBIgnore
    public boolean isSynchronized() {
        return isSynchronized;
    }

    public void setIsSynchronized(boolean isSynchronized) {
        this.isSynchronized = isSynchronized;
    }

    @DynamoDBIgnore
    public Account getAccount() { return account; }
    public void setAccount(Account account) {
        this.account = account;
    }
}
